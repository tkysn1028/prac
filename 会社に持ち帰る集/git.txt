git

エンジニア
チーム作業：：
複数のメンバがスケジュール
たくさんの人がたくさんのファイルを扱う際におかしくなる。

何かあった際に備え編集前のファイルを作る

→単純なバージョン管理

カオスになる。

どれが最新のファイルかどう変更したのか分からん

以外と手間
複数の人が同時に編集してしまう際に先の編集が消える

常に最新版ファイルを利用できる。
更新はgitに。手元にバックアップを残す必要はない。

編集ファイルを元に戻すことも可。

差分を表示できる。
いつおかしくなったのかを考える。

リポジトリ
履歴を管理する仕組み
ファイルやディレクトリの状態を記録する。
リモートリポジトリとローカルリポジトリ

ローカルリポジトリ
Aさんのリポ時取り
ほかの人のリポジトリも反映されている。

A画面の製造を完了させてテストが済むまでロードしたくない。

コミット、プッシュ
ファイルやでぃくれくとりに記録する。
履歴を残したいタイミングでコミット

チーム作業は
1つの論理的な塊として
変更内容の説明する
動かなくなるソースコードはコミットしない

プッシュ
アップロード　リモートリポジトリを更新
プル
ダウンロード

ブランチ
履歴の流れを分けて記録する
ブランチを分けると他のブランチの影響を受けない。
ブランチのまま更新される。

ブランチをマージさせることで合流する。

































