構造を先にイメージすることで上手くできているが、説明の順番を考えた方がいいかも。

フィードバック
基本的にはよく作られている。
指摘を全部直すかどうかは勝手だが、アドバイス。


・分と秒は二つに分ける必要はない。全部秒でいいのでは？秒だけ持たせることで処理も簡単になるのでは？サーバーの処理を増やす内容はやらない方がいいのかも。
・quiz.htmlの選択肢の内容は繰り返しになるので上手く
・セッションを使うならpost
・コントローラの内容は35~45のところはサービスクラスに入れた方がいい。
・サービスクラス39~42セレクトでカウント取って取ってこれるので、ソースコードを治す必要はない。
・サービスクラス41~43　５回SQLを実行しているので、DBの使い方としては効率的ではない。
・


quiz[] = (3,7,10,12,24)
select * from 問題
where id = 「quizid」;

select * from 問題
where id in (3,7,10,12,24)
にできる。inを使う。DBのアクセスを出来るだけ減らしていきましょ。

サービスクラスのコメントはしっかり描きましょ。


・バリデーションチェック　JavaScript　ヨウさん

①ウェルカム画面の空欄チェック
②ラジオボタンで内容が空欄のチェック

・calculateコントローラでラジオボタンの値をどうそろえるか？quizのDBの中のquestionidの
・採点する→正解の選択し
→questionの内容をどうコントローラに渡すか？

・タイマーをどう渡すか？
・名前とか、最高得点はrequestparamで受けとるのでもいい？
→セッションでやっぱり受け取りたい








