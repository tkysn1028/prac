設計書に沿って製造に取り掛かる
製造では実装方法が分からないことが多々ある。自分で調べるなどをする
成果物はeclipseを使って管理する
他の人が書いた部分を自分で勝手に変えない　コンパイルエラーのファイルのプッシュは厳禁。設計書をベースに作ること。あまり詰め込みすぎるとテストができなくなる。
設計が足りない部分の判明したらチューターと内容の共有を行う。
まず手を付けること
共有プロジェクトの作成　
スケジュールの作成
テーブル作成

スケジュールの作成　設計担当≠製造担当でもOK
コントローラなどクラスファイルを分ける。フォームだったらフォーム、エンティティだったらエンティティ。設計担当と製造担当は別でもOK
違う人の方がいい。穴が分かる。スキルが身につくので。
今週までに物を作り終わらせる。試験ができる程度に物を作っていこう。

共有プロジェクトの作成　
新しくリポジトリがつくられる。プロジェクトがそのままつくられている。
共有手順は以下。
プルリクとマージ：

javadocコメント
ソースコード
昔は設計書作ってから行っているが、ソースコード書きながらドキュメント化する。チームレビューソースレビューなどで


ー
html部分とspringbootのクラスの話は分けるか？
→
分ける

HTMLの内容を確認したら、その遷移を書いていく。

DBを作っていく
→
HTML作りの中で


作業の大まかな順番

DBを先に作る→formクラス→セッションクラス→thymeleafで扱うオブジェクトがそろう

→HTMLを作る


webアプリ作成に当たって必要になるツール

①ビュー
（htmlなど。ユーザーの入力出力を受け付ける）

②コントローラクラス
（画面遷移を扱う）

③formクラス
（htmlから受け取った内容をクラスに入れたり出力する。効力は次の遷移まで）

④セッションクラス
（htmlから受け取った内容をクラスに入れたり出力する。アプリケーション全部で使える）

⑤DBからの値を格納する用のエンティティクラス
（DBからの内容を入れるクラス）

⑥リポジトリ
（SQLを実行する）

⑦サービスクラス
（遷移以外の処理を担う）

⑧データベース


⑧→③→④→①

⑧がないと③④は作れない
③④がないと①は作れない

②⑤⑥⑦は、画面遷移毎に作っていく。






DBを使う際は研修通りJPArepositoryでいい？
→OK

タスク実行中にもう片方はどうするか？



























