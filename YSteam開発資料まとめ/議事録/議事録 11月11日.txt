ユーザーがウェルカムページにアクセス

→
提出して、ウェルカムページに戻るところまで

今のフォーマットで真似して、詰まっていることがあったらお互いに相談して


⓪ゆーざーがlocalhost:8080/でURLを入力する

①
入力　演算　出力
入力：メソッド名：home　で"/"のgetを受け取る

出力：index.htmlを返す　return "index"

間で行う処理は？直接リターンする
ユーザー情報の入れ物をインスタンス化

ユーザー情報のformクラスは用意するべき？
modelを引数に入れて、model.addattribute("user",user)して、


②
ｈｔｍｌが表示される

・ヘッダ右上のチーム名を押してリンクを踏む
→URLを直接入れる（localhost:8080)と"/"のget要求を直接送る方法
→/のget要求を飛ばす方法



・ユーザー名入力しない→開始ボタン押す→エラー
バリデーションチェック
そもそも開始ボタンを押したときの要求はpost?get?

getで<form method ="get">した場合、クエリ情報に値が入る安全性のためpostの方がいいのでは？
postでいいのでは？→post

post要求飛ばした先でチェックしますか？
postmappingの"/quizChallenge"が飛ぶ 

→コントローラで受ける

バリデーションチェックをどうするか？

boolean f =（DBに値が存在するかチェックのメソッドでtruefalse）

if(f){
DBから最高得点取ってきて次の画面に渡す

}

いつ登録する？
全て登録



・ユーザー名を入力→開始ボタン押す

③出力されて、postコントローラの動き

④quiz画面
最高得点
ユーザー名
→表示できる
問題と選択肢：
選択肢をランダムで表示させる
→選択肢が空欄だった場合の処理　苑




















そもそも、初めてログインする人と2回目ログインの人
namae ←新規登録

namae←update

true→最高得点

false→最高得点は「なし」になる







値が空欄の場合、どうする？
→エラー

①空欄の場合、再度get要求をバックエンドで飛ばすのか？javascriptでリフレッシュとかでページ再読み込みして対処

マウスでクリック
キーを押したり離したり


result画面に飛ぶ前のコントローラ
得点計算処理をする
・得点の計算方式
タイマーは入れる
→
かかった時間
10秒につき-5ポイント
100点満点
５題出して1題20点

選択肢4つのうち何が選択されたか？選択肢の内容を取り出す

ヨウさん　タイマー
文字列で来る


初回登録かどうかで実行SQLは変わる
初回insert
2回目以降だったらupdate

SQLで検索して取ったものはユーザーしかない










































