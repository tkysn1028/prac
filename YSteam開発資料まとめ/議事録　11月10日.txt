①
点数やユーザー名、タイマーなどの最初は無い状態の画面をウェルカムページで入れるか？

→
入れた方がいいのでは？苑
ヘッダーに入れて統一感を持たせる

ヘッダーの統一感を持たせたい　
最初からタイマーを入れずに後で入れた方がサプライズ

毎回同じページだと退屈では？重複させない方がいいのでは？

②そもそもヘッダーフッターはいる？
→
要る。
ただ、ログイン登録画面の

ヘッダー

タイマー、ユーザー名、前回の点数はヘッダーではなくボディの上の方に入れるべきでは？

ユーザー名もない　

問題画面にのみ入れるべき

統一感は

ヘッダにはいくつかの画像でずっと変わっている


→ヨウさんの意見採用
ヘッダーにはクイズの説明を入れる

タイマーやユーザー名とかはbodyに入れる　タイマーは一番上に配置

遷移したら問題画面


元々：
ヘッダーにタイマー、ユーザー名、前回点数を表示させる

→ヘッダーではなくてボディに入れるべき。
・ヘッダーに入れると最初にアクセスした人が困るから
←分岐させて表示させたらいい。
・要らない

→ヘッダーに何を入れるか？に困る
→ヘッダーをそもそもなくすべき？

ヘッダーにチーム名を入れる。チーム名のところにウェルカムページのリンク

フッター
下にテキストを入れておく

絵を描く人と、文章書く人で役割分かれる

描く：ヨウさん
文章書く：その


③レイアウト　画面の設計html部分は今決めるべき？後でもよくないか？
全体で決定するのはまだ早い。


・result画面で問題画面とウェルカムページの両方に飛べるようにするか？
やり直しするボタンを作るか？

→
・ウェルカムページから問題画面に飛ぶのは別にそんな大変ではない
・やり直し機能を入れているクイズアプリは意外と少ない。
・そんなに本格的でもないからやり直す人はそんなにいないから機能として入れても意味ない。


→メニュー戻るボタンのみで採用。問題画面には飛ばない



得点の方法
10問中8問正解→80点てする？
10問中8問正解かつタイム　にしてみてもいいかも？

なぜかというと、タイマー要らなくね？って思ったから意義は
①DBに入れて前回の記録として出す
②得点の要素に入れるか？
しかない
→②採用　タイマーの意味が出てくる。









最終タイム：

最終得点：

ユーザー名は要らないのでは？
→ユーザー名ないサイトも多いから、なくてもいいかも。
→シンプルに見せるため、ユーザー名はなし。

タイマーと得点ユーザー名は、bodyのところからresult画面ではなくスカ？
→なくす


最終タイム：
遷移先にどう持ってくるか？
→DBには登録せずに、

タイマー機能：

javascriptで実現。dateのクラスを利用して、外部ファイルから読み込む。

→ヨウさん

結果画面、クイズ画面に飛べないようにする　springsecurity機能
→その


タイマー機能　問題画面でタイマー測って得点に入れる、結果画面に表示
→よう


DBから答案内容を引っ張り出して、ランダムに表示する
→その

ウェルカムページに3秒ごとに入れ替わる画像をbodyの上の方に表示



出来るといった機能は必ず実装するように！




アクセス回数を入れるべきか？
→
ユーザー名を使うために

DBに登録している

他のところ

DB設計でpointとusernameを登録しているので、有効活用したい

→
①ユーザーの回答履歴を実装してみてもいいのでは？
DB追加は不要　→いつ回答したか？
遷移関係は必要

→ランキングで前回のスコアのランキング

・前回のスコア

・問題はランダムで出されるという状況で、スコアの記録を取るべきか？

最高得点を実装してみては？
毎回

if(DB内のスコア < 今回のスコア){
	update DBスコア；
}else{

}
→採用

ようさん
DB設計書の名前だけ修正


→最高得点のランキング機能
後回し



result画面に前回得点を入れるか？
→updateされた後だから取れないのでは？

if(DB内のスコア < 今回のスコア){
	update DBスコア；
}else{

}
はresult画面でいいのでは？
result画面は表示だけなので、何クリックしないときスコアはコントローラには

提出してから全ての答案表はコントローラにもっていってサービスで計算して、

result画面には前回の得点は要らない
例　今回の得点が前回より高くなった場合、今回だけ

どうやって今回の得点が前回の得点より大きいのか知るのか？
今回の得点
回答画面で




前回の得点























DBに登録する問題、答案
→30問～100問

→10題をランダムで
















